{"version":3,"sources":["app/apiService.js","app/exception/erroValidacao.js","app/service/usuarioService.js","components/card.js","components/form-group.js","components/toastr.js","app/service/localStorageService.js","app/service/authService.js","main/provedorAutenticacao.js","views/login.js","views/home.js","views/cadastroUsuario.js","components/selectMenu.js","views/lancamentos/lancamentosTable.js","app/service/lancamentoService.js","views/lancamentos/consultaLancamentos.js","views/lancamentos/cadastroLancamento.js","main/rotas.js","components/navbarItem.js","components/navbar.js","main/App.js","index.js"],"names":["httpClient","axios","create","baseURL","headers","ApiService","apiurl","this","url","objeto","requestUrl","post","put","delete","console","log","defaults","get","ErroValidacao","mensagens","UsuarioService","credenciais","id","usuario","erros","nome","push","email","match","senha","senhaRepeticao","length","Card","className","props","title","children","React","Component","FormGroup","htmlFor","label","mostrarMensagem","titulo","mensagem","tipo","toastr","mensagemErro","mensagemSucesso","mensagemAlerta","options","LocalStorageService","chave","valor","localStorage","setItem","JSON","stringify","item","getItem","parse","removeItem","AuthService","obterItem","removerItem","adicionarItem","AuthContext","createContext","AuthConsumer","Consumer","AuthProvider","Provider","ProvedorAutenticacao","state","usuarioAutenticado","isAutenticado","iniciarSessao","logar","setState","encerrarSessao","removerUsuarioAutenticado","contexto","value","Login","entrar","service","autenticar","then","response","context","data","history","catch","erro","prepareCadastrar","style","position","left","type","aria-describedby","placeholder","onChange","e","target","onClick","contextType","withRouter","Home","saldo","usuarioService","usuarioLogado","obterSaldoPorUsuario","error","formatter","format","locale","href","role","CadastroUsuario","validar","forEach","msg","salvar","prepareLogar","name","lista","map","option","index","key","rows","lancamentos","descricao","mes","status","disabled","actionEdit","actionDelete","alterarStatus","scope","LancamentoService","lancamentoFiltros","params","ano","lancamento","ConsultaLancamentos","showConfirmDialogDel","lancamentoDeletar","showConfirmAlteracaoStatus","lancamentoMudancaoStatus","statusAlterado","consultar","lancamentoFiltro","lancamentoService","resposta","editar","abrirConfirmacaoDeletar","cancelarDelecao","deletar","indexOf","splice","abrirConfirmacaoAlterarStatus","cancelarAlteracaoStatus","lanctos","meses","obterListaMeses","tipos","obterListaTipo","confirmaDialogFooter","icon","confirmaDialogFooterAlterarStatus","header","visible","width","footer","modal","onHide","CadastroLancamento","atualizando","handleChange","event","prepareDadosPersistencia","atualizar","EhNovoLancamento","LocalStorage","preparaConsultar","obterPorId","pattern","RotaAutenticada","component","isUsuarioAutenticado","render","componentProps","to","pathname","from","location","Rotas","path","ConsultaLancamento","NavbarItem","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","deslogar","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"yRAEMA,E,OAAaC,EAAMC,OAAO,CAC5BC,QAAS,uCAETC,QAAQ,CAAC,WAAY,2BACZ,8BAAgC,IAChC,+BAAiC,uCAqC/BC,E,WAhCX,WAAYC,GAAQ,oBACjBC,KAAKD,OAASA,E,iDAGZE,EAAKC,GACN,IAAMC,EAAU,UAAMH,KAAKD,QAAX,OAAoBE,GAEpC,OAAOR,EAAWW,KAAKD,EAAYD,K,0BAGnCD,EAAKC,GACL,IAAMC,EAAU,UAAMH,KAAKD,QAAX,OAAoBE,GACpC,OAAOR,EAAWY,IAAIF,EAAYD,K,6BAG/BD,GACH,IAAME,EAAU,UAAMH,KAAKD,QAAX,OAAoBE,GACpC,OAAOR,EAAWa,OAAOH,K,0BAGzBF,GACA,IAAME,EAAU,UAAMH,KAAKD,QAAX,OAAoBE,GAOpC,OALAM,QAAQC,IAAI,YAAaf,EAAWgB,SAASZ,SAC7CU,QAAQC,IAAI,SAAUf,EAAWgB,SAASZ,QAAQO,MAClDG,QAAQC,IAAI,SAAUf,EAAWgB,UACjCF,QAAQC,IAAI,SAAUf,EAAWI,SAE1BJ,EAAWiB,IAAIP,O,KCpCfQ,MAJf,SAAuBC,GACnBZ,KAAKY,UAAYA,GC8CNC,E,kDA1CX,aAAc,uCACJ,iB,uDAGCC,GACP,OAAOd,KAAKI,KAAK,cAAeU,K,2CAGfC,GACjB,OAAOf,KAAKU,IAAL,WAAaK,EAAb,a,6BAGJC,GACH,OAAOhB,KAAKI,KAAK,IAAKY,K,8BAGlBA,GACJ,IAAMC,EAAQ,GAmBf,GAjBMD,EAAQE,MACTD,EAAME,KAAK,qCAGVH,EAAQI,MAEDJ,EAAQI,MAAMC,MAAM,0EACpBL,EAAQI,MAAMC,MAAM,2DAC5BJ,EAAME,KAAK,gCAHXF,EAAME,KAAK,uCAMVH,EAAQM,OAAUN,EAAQO,eAEtBP,EAAQM,QAAUN,EAAQO,gBAC/BN,EAAME,KAAK,qCAFXF,EAAME,KAAK,mDAKZF,GAASA,EAAMO,OAAS,EACvB,MAAM,IAAIb,EAAcM,O,GAvCPnB,GCgBd2B,E,uKAbP,OACI,yBAAKC,UAAU,aACX,wBAAIA,UAAU,eAAe1B,KAAK2B,MAAMC,OACxC,yBAAKF,UAAU,aACV1B,KAAK2B,MAAME,e,GARbC,IAAMC,WCSVC,MATf,SAAmBL,GACf,OACI,yBAAKD,UAAU,cACZ,2BAAOO,QAASN,EAAMM,SAAUN,EAAMO,OACrCP,EAAME,W,iBCcX,SAASM,EAAgBC,EAAQC,EAAUC,GAC9CC,IAAOD,GAAMD,EAAUD,GAGpB,SAASI,EAAaH,GACzBF,EAAgB,OAAQE,EAAU,SAG/B,SAASI,EAAgBJ,GAC5BF,EAAgB,UAAWE,EAAU,WAGlC,SAASK,EAAeL,GAC3BF,EAAgB,SAAUE,EAAU,WA/BxCE,IAAOI,QAAU,CACb,aAAe,EACf,OAAS,EACT,aAAe,EACf,aAAe,EACf,cAAiB,mBACjB,mBAAqB,EACrB,QAAW,KACX,aAAgB,MAChB,aAAgB,OAChB,QAAW,OACX,gBAAmB,OACnB,WAAc,QACd,WAAc,SACd,WAAc,SACd,WAAc,W,ICjBGC,E,2GAEIC,EAAOC,GACxBC,aAAaC,QAAQH,EAAOI,KAAKC,UAAUJ,M,gCAG9BD,GACb,IAAMM,EAAOJ,aAAaK,QAAQP,GAClC,OAAOI,KAAKI,MAAMF,K,kCAGHN,GACfE,aAAaO,WAAWT,O,KCRXU,E,oHAGb,IAAMvC,EAAU4B,EAAoBY,UALd,mBAMtB,OAAQxC,GAAWA,EAAQD,K,kDAI3B6B,EAAoBa,YAVE,qB,4BAabzC,GACT4B,EAAoBc,cAdE,kBAc4B1C,K,gDAInD,OAAO4B,EAAoBY,UAlBJ,uB,KCEjBG,EAAc7B,IAAM8B,gBACpBC,EAAeF,EAAYG,SAClCC,EAAeJ,EAAYK,SAoClBC,E,4MAhCXC,MAAQ,CACJC,mBAAoB,KACpBC,eAAe,G,EAGnBC,cAAgB,SAACrD,GACbuC,EAAYe,MAAMtD,GAClB,EAAKuD,SAAU,CAACH,eAAe,EAAMD,mBAAoBnD,K,EAG7DwD,eAAiB,WACbjB,EAAYkB,4BACZ,EAAKF,SAAS,CAAEH,eAAe,EAAOD,mBAAoB,Q,uDAI1D,IAAMO,EAAW,CACbP,mBAAoBnE,KAAKkE,MAAMC,mBAC/BC,cAAepE,KAAKkE,MAAME,cAC1BC,cAAerE,KAAKqE,cACpBG,eAAgBxE,KAAKwE,gBAGzB,OACI,kBAACT,EAAD,CAAcY,MAAOD,GAChB1E,KAAK2B,MAAME,c,GA3BOC,IAAMC,WCCnC6C,E,kDAOF,aAAc,IAAD,8BACT,gBANJV,MAAQ,CACJ9C,MAAO,GACPE,MAAO,IAGE,EAKbuD,OAAS,WACL,EAAKC,QAAQC,WAAW,CACpB3D,MAAO,EAAK8C,MAAM9C,MAClBE,MAAO,EAAK4C,MAAM5C,QACnB0D,MAAM,SAAAC,GACL,EAAKC,QAAQb,cAAcY,EAASE,MACpC,EAAKxD,MAAMyD,QAAQjE,KAAK,YACzBkE,OAAM,SAAAC,GACL9C,EAAa8C,EAAKL,SAASE,UAbtB,EAiBbI,iBAAmB,WACf,EAAK5D,MAAMyD,QAAQjE,KAAK,sBAhBxB,EAAK2D,QAAU,IAAIjE,EAFV,E,qDAqBH,IAAD,OACL,OACI,yBAAKa,UAAU,OACX,yBAAKA,UAAU,WAAW8D,MAAO,CAAEC,SAAU,WAAYC,KAAM,UAC3D,yBAAKhE,UAAU,mBACX,kBAAC,EAAD,CAAME,MAAM,SACR,yBAAKF,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gBACX,kCACI,kBAAC,EAAD,CAAWQ,MAAM,YAAYD,QAAQ,sBACjC,2BAAO0D,KAAK,QACRjE,UAAU,eACVX,GAAG,qBACH6E,mBAAiB,YACjBC,YAAY,iBACZlB,MAAO3E,KAAKkE,MAAM9C,MAClB0E,SAAU,SAACC,GAAD,OAAO,EAAKxB,SAAS,CAAEnD,MAAO2E,EAAEC,OAAOrB,YAEzD,kBAAC,EAAD,CAAWzC,MAAM,YAAYD,QAAQ,yBACjC,2BAAO0D,KAAK,WACRjE,UAAU,eACVX,GAAG,wBACH8E,YAAY,WACZlB,MAAO3E,KAAKkE,MAAM5C,MAClBwE,SAAU,SAACC,GAAD,OAAO,EAAKxB,SAAS,CAAEjD,MAAOyE,EAAEC,OAAOrB,YAEzD,4BAAQsB,QAASjG,KAAK6E,OACdc,KAAK,SACLjE,UAAU,mBACV,uBAAGA,UAAW,kBAHtB,WAIA,4BAAQuE,QAASjG,KAAKuF,iBACdI,KAAK,SACLjE,UAAU,kBACV,uBAAGA,UAAW,oBAHtB,0B,GA3DxBI,IAAMC,WA2E1B6C,EAAMsB,YAAcvC,EAELwC,kBAAYvB,G,iBCjFrBwB,E,kDAEF,aAAc,IAAD,8BACT,gBAIJlC,MAAM,CACFmC,MAAO,GAJP,EAAKC,eAAiB,IAAIzF,EAFjB,E,gEASO,IAAD,OACT0F,EAAgBvG,KAAKkF,QAAQf,mBAEnCnE,KAAKsG,eAAeE,qBAAqBD,EAAcxF,IAClDiE,MAAK,SAAAC,GACE,EAAKV,SAAS,CAAC8B,MAAOpB,EAASE,UAErCE,OAAM,SAAAC,GACJ/E,QAAQkG,MAAMnB,EAAKL,e,+BAK3B,OACI,yBAAKvD,UAAU,aACX,wBAAIA,UAAU,aAAd,cACA,uBAAGA,UAAU,QAAb,yCACA,uBAAGA,UAAU,QAAb,2BAA0CgF,IAAUC,OAAO3G,KAAKkE,MAAMmC,MAAO,CAACO,OAAQ,UAAtF,KACA,wBAAIlF,UAAU,SACV,0IACA,uBAAGA,UAAU,QACT,uBAAGA,UAAU,yBACVmF,KAAK,qBACLC,KAAK,UACL,uBAAGpF,UAAU,oBAHhB,yBAIA,uBAAGA,UAAU,wBACVmF,KAAK,yBACLC,KAAK,UACL,uBAAGpF,UAAU,qBAHhB,kC,GApCLI,IAAMC,WA8CzBqE,EAAKF,YAAcvC,EAEJyC,QC7CTW,E,kDACF,aAAc,IAAD,8BACT,gBAIJ7C,MAAQ,CACJhD,KAAM,GACNE,MAAO,GACPE,MAAO,GACPC,eAAgB,IATP,EAYbyF,QAAS,WAAO,IAAD,EACkC,EAAK9C,MAC5ClD,EAAU,CAACE,KAFN,EACJA,KACgBE,MAFZ,EACEA,MACiBE,MAFnB,EACSA,MACiBC,eAF1B,EACgBA,gBAG3B,IACI,EAAK+E,eAAeU,QAAQhG,GAC/B,MAAMyF,GAGH,OAFiBA,EAAM7F,UACdqG,SAAQ,SAAAC,GAAG,OAAIxE,EAAewE,OAChC,EAGX,EAAKC,OAAOnG,IAxBH,EA2BbmG,OAAS,SAACnG,GACN,EAAKsF,eAAea,OAAOnG,GACvBgE,MAAM,SAAAC,GACHxC,EAAgB,6EAChB,EAAKd,MAAMyD,QAAQjE,KAAK,aACxBkE,OAAM,SAAAoB,GACNjE,EAAaiE,EAAMxB,SAASE,UAjC1B,EAqCbiC,aAAe,WACX,EAAKzF,MAAMyD,QAAQjE,KAAK,WApCxB,EAAKmF,eAAiB,IAAIzF,EAFjB,E,qDAyCH,IAAD,OACL,OACI,kBAAC,EAAD,CAAMe,MAAM,0BACR,yBAAKF,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gBACX,kCACI,kBAAC,EAAD,CAAWQ,MAAM,UAAUD,QAAQ,aAC/B,2BAAO0D,KAAK,OACRjE,UAAU,eACVX,GAAG,YACHsG,KAAK,OACLvB,SAAU,SAACC,GAAD,OAAO,EAAKxB,SAAS,CAAErD,KAAM6E,EAAEC,OAAOrB,YAGxD,kBAAC,EAAD,CAAWzC,MAAM,YAAYD,QAAQ,cACjC,2BAAO0D,KAAK,OACRjE,UAAU,eACVX,GAAG,aACHsG,KAAK,QACLvB,SAAU,SAACC,GAAD,OAAO,EAAKxB,SAAS,CAAEnD,MAAO2E,EAAEC,OAAOrB,YAGzD,kBAAC,EAAD,CAAWzC,MAAM,WAAWD,QAAQ,cAChC,2BAAO0D,KAAK,WACRjE,UAAU,eACVX,GAAG,aACHsG,KAAK,QACLvB,SAAU,SAACC,GAAD,OAAO,EAAKxB,SAAS,CAAEjD,MAAOyE,EAAEC,OAAOrB,YAGzD,kBAAC,EAAD,CAAWzC,MAAM,oBAAoBD,QAAQ,oBACzC,2BAAO0D,KAAK,WACRjE,UAAU,eACVX,GAAG,mBACHsG,KAAK,QACLvB,SAAU,SAACC,GAAD,OAAO,EAAKxB,SAAS,CAAEhD,eAAgBwE,EAAEC,OAAOrB,YAGlE,4BAAQsB,QAASjG,KAAKgH,QACdrB,KAAK,SACLjE,UAAU,mBACV,uBAAGA,UAAU,cAAb,KAHR,WAIA,4BAAQuE,QAASjG,KAAKoH,aACdzB,KAAK,SACLjE,UAAU,kBACV,uBAAGA,UAAU,eAAb,KAHR,sB,GArFFI,IAAMC,WAkGrBoE,cAAYY,GCxGZ,WAACpF,GAEZ,IAAMgB,EAAUhB,EAAM2F,MAAMC,KAAK,SAACC,EAAQC,GACtC,OACI,4BAAQC,IAAKD,EAAO9C,MAAO6C,EAAO7C,OAAlC,IAA2C6C,EAAOtF,MAAlD,QAIR,OACI,2BAAYP,EACPgB,ICTE,WAAAhB,GAEX,IAAMgG,EAAOhG,EAAMiG,YAAYL,KAAI,SAAAK,GAC/B,OACI,wBAAIF,IAAKE,EAAY7G,IACjB,4BAAK6G,EAAYC,WACjB,4BAAKnB,IAAUC,OAAOiB,EAAY9E,MAAO,CAAC8D,OAAQ,WAClD,4BAAKgB,EAAYtF,MACjB,4BAAKsF,EAAYE,KACjB,4BAAKF,EAAYG,QACjB,4BACI,4BAAQrG,UAAU,kBACVE,MAAM,SACN+D,KAAK,SACLqC,SAAiC,aAAtBJ,EAAYG,OACvB9B,QAAS,SAACF,GAAD,OAAOpE,EAAMsG,WAAWL,EAAY7G,MAC7C,uBAAGW,UAAU,kBAErB,4BAAQiE,KAAK,SAAS/D,MAAM,UACpBF,UAAU,iBACVuE,QAAS,SAACF,GAAD,OAAOpE,EAAMuG,aAAaN,KACnC,uBAAGlG,UAAU,iBAErB,4BAAQiE,KAAK,SAAS/D,MAAM,WACpBF,UAAU,kBACVsG,SAAiC,aAAtBJ,EAAYG,QAA+C,aAAtBH,EAAYG,OAC5D9B,QAAS,SAACF,GAAD,OAAOpE,EAAMwG,cAAcP,EAAa,eACjD,uBAAGlG,UAAU,iBAErB,4BAAQiE,KAAK,SAAS/D,MAAM,WACpBF,UAAU,kBACVsG,SAAiC,aAAtBJ,EAAYG,OACvB9B,QAAS,SAACF,GAAD,OAAOpE,EAAMwG,cAAcP,EAAa,eACjD,uBAAGlG,UAAU,sBAOrC,OACI,2BAAOA,UAAU,qBACb,+BACI,4BACI,wBAAI0G,MAAM,OAAV,mBACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,iBAGR,+BACKT,KCnDIU,E,kDAEjB,aAAc,uCACJ,oB,8DAIN,MAAO,CACH,CAAEnG,MAAO,eAAgByC,MAAO,IAChC,CAAEzC,MAAO,UAAWyC,MAAO,GAC3B,CAAEzC,MAAO,YAAayC,MAAO,GAC7B,CAAEzC,MAAO,WAASyC,MAAO,GACzB,CAAEzC,MAAO,QAASyC,MAAO,GACzB,CAAEzC,MAAO,OAAQyC,MAAO,GACxB,CAAEzC,MAAO,QAASyC,MAAO,GACzB,CAAEzC,MAAO,QAASyC,MAAO,GACzB,CAAEzC,MAAO,SAAUyC,MAAO,GAC1B,CAAEzC,MAAO,WAAYyC,MAAO,GAC5B,CAAEzC,MAAO,UAAWyC,MAAO,IAC3B,CAAEzC,MAAO,WAAYyC,MAAO,IAC5B,CAAEzC,MAAO,WAAYyC,MAAO,O,uCAKhC,MAAO,CACH,CAAEzC,MAAO,eAAgByC,MAAO,IAChC,CAAEzC,MAAO,UAAWyC,MAAO,WAC3B,CAAEzC,MAAO,UAAWyC,MAAO,c,gCAIzB2D,GACN,IAAIC,EAAM,eAAWD,EAAkBE,KAkBvC,OAhBIF,EAAkBR,MAClBS,EAAM,UAAMA,EAAN,gBAAoBD,EAAkBR,MAE5CQ,EAAkBhG,OAClBiG,EAAM,UAAMA,EAAN,iBAAqBD,EAAkBhG,OAE7CgG,EAAkBP,SAClBQ,EAAM,UAAMA,EAAN,mBAAuBD,EAAkBP,SAE/CO,EAAkBtH,UAClBuH,EAAM,UAAMA,EAAN,oBAAwBD,EAAkBtH,UAEhDsH,EAAkBT,YAClBU,EAAM,UAAMA,EAAN,sBAA0BD,EAAkBT,YAG/C7H,KAAKU,IAAI6H,K,8BAGZE,GACJ,IAAMxH,EAAQ,GAkBd,GAhBKwH,EAAWZ,WACZ5G,EAAME,KAAK,mEAEVsH,EAAWD,KACZvH,EAAME,KAAK,uDAEVsH,EAAWX,KACZ7G,EAAME,KAAK,4DAEVsH,EAAW3F,OAAS2F,EAAW3F,OAAS,IACzC7B,EAAME,KAAK,yDAEVsH,EAAWnG,MACZrB,EAAME,KAAK,wDAGXF,GAASA,EAAMO,OAAS,EACxB,MAAM,IAAIb,EAAcM,K,8BAIxBF,GACJ,OAAOf,KAAKM,OAAL,WAAgBS,M,6BAGpB0H,GACH,OAAOzI,KAAKI,KAAK,IAAKqI,K,gCAGhBA,GACN,OAAOzI,KAAKK,IAAL,WAAaoI,EAAW1H,IAAM0H,K,oCAG3B1H,EAAIgH,GAMd,OAAO/H,KAAKK,IAAL,WAAaU,EAAb,oBAAmC,CAACgH,a,iCAGpChH,GACP,OAAOf,KAAKU,IAAL,WAAaK,Q,GApGmBjB,G,gBCSzC4I,E,kDAeF,aAAe,IAAD,8BACV,gBAdJxE,MAAQ,CACJsE,IAAK,GACLV,IAAK,GACLxF,KAAM,GACNuF,UAAW,GACXc,sBAAsB,EACtBC,kBAAmB,GACnBC,4BAA4B,EAC5BC,yBAA0B,GAC1BC,eAAgB,GAChBnB,YAAa,IAGH,EAKdoB,UAAY,WACR,IAAK,EAAK9E,MAAMsE,IAEZ,OADAhG,EAAa,sDACN,EAGX,IAAM+D,EAAgB3D,EAAoBY,UAAU,mBAE9CyF,EAAmB,CACrBT,IAAK,EAAKtE,MAAMsE,IAChBV,IAAK,EAAK5D,MAAM4D,IAChBxF,KAAM,EAAK4B,MAAM5B,KACjByF,OAAQ,GACRF,UAAW,EAAK3D,MAAM2D,UACtB7G,QAASuF,EAAcxF,IAG3B,EAAKmI,kBAAkBF,UAAUC,GAC5BjE,MAAK,SAAAmE,GACF,IAAM7B,EAAQ6B,EAAShE,KAEpBmC,EAAM9F,OAAS,GACdkB,EAAe,gCAGnB,EAAK6B,SAAS,CAAEqD,YAAaN,OAC9BjC,OAAM,SAAAoB,GACLjE,EAAaiE,EAAM0C,SAAShE,UAhC1B,EAoCdiE,OAAS,SAACrI,GACN,EAAKY,MAAMyD,QAAQjE,KAAnB,+BAAgDJ,KArCtC,EAwCdsI,wBAA0B,SAACZ,GACvB,EAAKlE,SAAS,CAACoE,sBAAsB,EAAMC,kBAAmBH,KAzCpD,EA4Cda,gBAAkB,WACd,EAAK/E,SAAS,CAACoE,sBAAsB,EAAOC,kBAAmB,MA7CrD,EAgDdW,QAAU,WACN,EAAKL,kBAAkBK,QAAQ,EAAKrF,MAAM0E,kBAAkB7H,IACvDiE,MAAK,SAAAC,GACF,IAAMwC,EAAQ,EAAKvD,MAAM0D,YAAY4B,QAAQ,EAAKtF,MAAM0E,mBACxD,EAAK1E,MAAM0D,YAAY6B,OAAOhC,EAAO,GACrC,EAAKlD,SAAS,CAACqD,YAAa,EAAK1D,MAAM0D,YAAae,sBAAsB,IAE1ElG,EAAgB,6CACjB4C,OAAM,SAAAC,GACL9C,EAAa,oDAzDX,EA6Dd+C,iBAAmB,WACf,EAAK5D,MAAMyD,QAAQjE,KAAK,yBA9Dd,EAiEduI,8BAAgC,SAACjB,EAAYV,GACzCxH,QAAQC,IAAI,WAAYuH,GACxBxH,QAAQC,IAAI,WAAYiI,GAExB,EAAKlE,SAAS,CAACsE,4BAA4B,EAAMC,yBAA0BL,EAAYM,eAAgBhB,KArE7F,EAwEd4B,wBAA0B,WACtB,EAAKpF,SAAS,CAACsE,4BAA4B,EAAOC,yBAA0B,GAAIC,eAAgB,MAzEtF,EA4EdZ,cAAgB,WACZ,IAAMY,EAAiB,EAAK7E,MAAM6E,eAElC,EAAKG,kBAAkBf,cAAc,EAAKjE,MAAM4E,yBAAyB/H,GAAIgI,GACxE/D,MAAM,SAAAC,GACH,IAAM2E,EAAU,EAAK1F,MAAM0D,aAGb,GAFAgC,EAAQJ,QAAQ,EAAKtF,MAAM4E,4BAGrC,EAAK5E,MAAM4E,yBAAyBf,OAASgB,EAC7Ca,EAAQ7B,OAASgB,EACjB,EAAKxE,SAAS,CAACqD,YAAagC,EAASf,4BAA4B,EAAOE,eAAgB,MAG5FtG,EAAgB,oCACjB4C,OAAM,SAAAoB,GACLjE,EAAaiE,EAAMxB,SAASE,UA1FpC,EAAK+D,kBAAoB,IAAIb,EAFnB,E,qDAgGJ,IAAD,OACCwB,EAAQ7J,KAAKkJ,kBAAkBY,kBAE/BC,EAAQ/J,KAAKkJ,kBAAkBc,iBAE/BC,EACF,6BACI,kBAAC,SAAD,CAAQ/H,MAAM,YAAYgI,KAAK,cAAcjE,QAASjG,KAAKuJ,UAC3D,kBAAC,SAAD,CAAQrH,MAAM,WAAWgI,KAAK,cAAcjE,QAASjG,KAAKsJ,mBAI5Da,EACF,6BACI,kBAAC,SAAD,CAAQjI,MAAM,YAAYgI,KAAK,cAAcjE,QAASjG,KAAKmI,gBAC3D,kBAAC,SAAD,CAAQjG,MAAM,WAAWgI,KAAK,cAAcjE,QAASjG,KAAK2J,2BAIlE,OACI,kBAAC,EAAD,CAAM/H,MAAM,8BACR,yBAAKF,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gBACX,kBAAC,EAAD,CAAWQ,MAAM,SAASD,QAAQ,YAC9B,2BAAO0D,KAAK,OACRjE,UAAU,eACVX,GAAG,WACH4D,MAAO3E,KAAKkE,MAAMsE,IAClB1C,SAAU,SAACC,GAAD,OAAO,EAAKxB,SAAS,CAAEiE,IAAKzC,EAAEC,OAAOrB,SAC/CkB,YAAY,kBAEpB,kBAAC,EAAD,CAAW5D,QAAQ,WAAWC,MAAM,aAChC,kBAAC,EAAD,CAAYR,UAAU,eAClBX,GAAG,cACH4D,MAAO3E,KAAKkE,MAAM4D,IAClBhC,SAAU,SAACC,GAAD,OAAO,EAAKxB,SAAS,CAAEuD,IAAK/B,EAAEC,OAAOrB,SAC/C2C,MAAOuC,KAEf,kBAAC,EAAD,CAAW5H,QAAQ,YAAYC,MAAM,2BACjC,kBAAC,EAAD,CAAYR,UAAU,eAClBX,GAAG,eACH4D,MAAO3E,KAAKkE,MAAM5B,KAClBwD,SAAU,SAAAC,GAAC,OAAI,EAAKxB,SAAS,CAAEjC,KAAMyD,EAAEC,OAAOrB,SAC9C2C,MAAOyC,KAEf,kBAAC,EAAD,CAAW7H,MAAM,qBAAeD,QAAQ,aACpC,2BAAO0D,KAAK,OACRjE,UAAU,eACVX,GAAG,YACH4D,MAAO3E,KAAKkE,MAAM2D,UAClB/B,SAAU,SAACC,GAAD,OAAO,EAAKxB,SAAS,CAAEsD,UAAW9B,EAAEC,OAAOrB,SACrDkB,YAAY,8BAGpB,4BAAQI,QAASjG,KAAKgJ,UACdrD,KAAK,SACLjE,UAAU,mBACV,uBAAGA,UAAW,iBAHtB,WAIA,4BAAQuE,QAASjG,KAAKuF,iBACdI,KAAK,SACLjE,UAAU,kBACV,uBAAGA,UAAW,eAHtB,iBAOZ,6BACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gBACX,kBAAC,EAAD,CAAiBkG,YAAa5H,KAAKkE,MAAM0D,YACrCK,WAAYjI,KAAKoJ,OACjBlB,aAAclI,KAAKqJ,wBACnBlB,cAAenI,KAAK0J,mCAIpC,6BACI,kBAAC,SAAD,CAAQU,OAAO,oBACPC,QAASrK,KAAKkE,MAAMyE,qBACpBnD,MAAO,CAAE8E,MAAO,QAChBC,OAAQN,EACRO,OAAO,EACPC,OAAQ,kBAAM,EAAKlG,SAAS,CAAEoE,sBAAsB,MAL5D,4CAQA,kBAAC,SAAD,CAAQyB,OAAO,oBACPC,QAASrK,KAAKkE,MAAM2E,2BACpBrD,MAAO,CAAE8E,MAAO,QAChBC,OAAQJ,EACRK,OAAO,EACPC,OAAQ,kBAAM,EAAKlG,SAAS,CAAEsE,4BAA4B,MALlE,0DAMsD7I,KAAKkE,MAAM6E,eANjE,Y,GArMcjH,IAAMC,WAmNzBoE,cAAWuC,G,gBCrNpBgC,E,kDAcF,aAAc,IAAD,8BACT,gBAbJxG,MAAQ,CACJnD,GAAI,KACJ8G,UAAW,GACXW,IAAK,GACLV,IAAK,GACLhF,MAAO,GACPR,KAAM,GACNtB,QAAS,KACT+G,OAAQ,GACR4C,aAAa,GAGJ,EAmBbC,aAAe,SAACC,GACZ,IAAMlG,EAAQkG,EAAM7E,OAAOrB,MACrB0C,EAAQwD,EAAM7E,OAAOqB,KAE3B,EAAK9C,SAAL,eAAiB8C,EAAQ1C,KAvBhB,EA0BbqC,QAAU,WACN,IAAMyB,EAAa,EAAKqC,2BAExB,IACI,EAAK5B,kBAAkBlC,QAAQyB,GAClC,MAAMnD,GAKH,OAJaA,EAAK1E,UACbqG,SAAQ,SAAAC,GAAG,OAAIxE,EAAewE,MAEnC3G,QAAQC,IAAI,uBAAkB8E,EAAK1E,YAC5B,EAGX,OAAI,EAAKsD,MAAMnD,GACJ,EAAKgK,UAAUtC,GAEf,EAAKtB,OAAOsB,IA1Cd,EA8CbqC,yBAA2B,WACvB,GAAI,EAAKE,mBAAmB,CACxB,IAAMhK,EAAUiK,EAAazH,UAAU,mBACvC,EAAKe,SAAS,CAACvD,QAASA,EAAQD,KAFR,MAIqB,EAAKmD,MAGlD,MAFmB,CAAE2D,UALG,EAIhBA,UACwB/E,MALR,EAILA,MACoBgF,IALf,EAIEA,IACkBU,IALpB,EAIOA,IACkBlG,KALzB,EAIYA,KACmBtB,QAASA,EAAQD,IAGtE,IAAD,EACiE,EAAKmD,MAGvE,MAFmB,CAAE2D,UAFpB,EACOA,UACwB/E,MAF/B,EACkBA,MACoBgF,IAFtC,EACyBA,IACkBU,IAF3C,EAC8BA,IACkBlG,KAFhD,EACmCA,KACmBvB,GAFtD,EACyCA,GACiBC,QAF1D,EAC6CA,QACsB+G,OAFnE,EACsDA,SAxDlD,EA+DbiD,iBAAmB,WACf,OAAI,EAAK9G,MAAMnD,IAhEN,EAuEboG,OAAS,SAACsB,GACN,OAAO,EAAKS,kBAAkB/B,OAAOsB,GAChCzD,MAAM,SAAAC,GACHxC,EAAgB,uCAChB,EAAKd,MAAMyD,QAAQjE,KAAK,4BACzBkE,OAAO,SAAAoB,GACNjE,EAAaiE,EAAMxB,SAASE,UA7E3B,EAiFb4F,UAAY,SAACtC,GACT,OAAO,EAAKS,kBAAkB6B,UAAUtC,GACnCzD,MAAM,SAAAC,GACH,EAAKtD,MAAMyD,QAAQjE,KAAK,yBACxBsB,EAAgB,2CACjB4C,OAAO,SAAAoB,GACNjE,EAAaiE,EAAMxB,SAASE,UAvF3B,EA2Fb+F,iBAAmB,WACf,EAAKvJ,MAAMyD,QAAQjE,KAAK,0BA1FxB,EAAK+H,kBAAoB,IAAIb,EAFpB,E,gEAKO,IAAD,OACTE,EAASvI,KAAK2B,MAAMN,MAAMkH,OAC5BA,EAAOxH,IACPf,KAAKkJ,kBAAkBiC,WAAW5C,EAAOxH,IACpCiE,MAAM,SAAAC,GACH,EAAKV,SAAL,eAAmBU,EAASE,KAA5B,CAAkCwF,aAAa,QAChDtF,OAAM,SAAAoB,GACLjE,EAAaiE,EAAMxB,SAASE,SAIxC5E,QAAQC,IAAI+H,K,+BAgFZ,IAAMsB,EAAQ7J,KAAKkJ,kBAAkBY,kBAC/BC,EAAQ/J,KAAKkJ,kBAAkBc,iBAErC,OACI,kBAAC,EAAD,CAAMpI,MAAO5B,KAAKkE,MAAMyG,YAAc,4BAA2B,8BAC7D,yBAAKjJ,UAAU,OACX,yBAAKA,UAAU,aACX,kBAAC,EAAD,CAAWX,GAAG,iBAAiBmB,MAAM,sBACjC,2BAAOnB,GAAG,iBACH4E,KAAK,OACLjE,UAAU,eACV2F,KAAK,YACL1C,MAAO3E,KAAKkE,MAAM2D,UAClB/B,SAAU9F,KAAK4K,kBAIlC,yBAAKlJ,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,CAAWX,GAAG,WAAWmB,MAAM,UAC3B,2BAAOnB,GAAG,WACH4E,KAAK,OACLjE,UAAU,eACV2F,KAAK,MACL1C,MAAO3E,KAAKkE,MAAMsE,IAClB1C,SAAU9F,KAAK4K,iBAG9B,yBAAKlJ,UAAU,YACX,kBAAC,EAAD,CAAWO,QAAQ,WAAWC,MAAM,aAC5B,kBAAC,EAAD,CAAYR,UAAU,eAClBX,GAAG,cACHsG,KAAK,MACL1C,MAAO3E,KAAKkE,MAAM4D,IAClBhC,SAAU9F,KAAK4K,aACftD,MAAOuC,OAI3B,yBAAKnI,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,CAAWX,GAAG,aAAamB,MAAM,YAC7B,2BAAOnB,GAAG,aACH4E,KAAK,SACLyF,QAAQ,WACR1J,UAAU,yBACV2F,KAAK,QACL1C,MAAO3E,KAAKkE,MAAMpB,MAClBgD,SAAU9F,KAAK4K,iBAG9B,yBAAKlJ,UAAU,YACX,kBAAC,EAAD,CAAWX,GAAG,YAAYmB,MAAM,WAC5B,kBAAC,EAAD,CAAYR,UAAU,eACVX,GAAG,YACHsG,KAAK,OACL1C,MAAO3E,KAAKkE,MAAM5B,KAClBwD,SAAU9F,KAAK4K,aACftD,MAAOyC,MAG3B,yBAAKrI,UAAU,YACX,kBAAC,EAAD,CAAWX,GAAG,cAAcmB,MAAM,aAC9B,2BAAOnB,GAAG,cACH4E,KAAK,OACL0B,KAAK,SACL1C,MAAO3E,KAAKkE,MAAM6D,OAClBrG,UAAU,eAAesG,UAAQ,OAIpD,yBAAKtG,UAAU,OACX,yBAAKA,UAAU,YACX,4BAAQuE,QAASjG,KAAKgH,QACdtF,UAAU,mBACV,uBAAGA,UAAW1B,KAAKkE,MAAMyG,YAAc,gBAAiB,eACvD3K,KAAKkE,MAAMyG,YAAc,aAAe,WAEjD,4BAAQ1E,QAASjG,KAAKkL,iBACdxJ,UAAU,kBACV,uBAAGA,UAAW,qBAFtB,kB,GA5LSI,IAAMC,WAuMxBoE,cAAWuE,G,QCxM1B,SAASW,EAAT,GAAoF,IAA7CtJ,EAA4C,EAAvDuJ,UAAsBC,EAAiC,EAAjCA,qBAAyB5J,EAAQ,oDAC/E,OACI,kBAAC,IAAD,iBAAWA,EAAX,CAAkB6J,OAAS,SAACC,GACxB,OAAIF,EAEI,kBAACxJ,EAAc0J,GAIf,kBAAC,IAAD,CAAUC,GAAK,CAACC,SAAU,SAAUzH,MAAO,CAAE0H,KAAMH,EAAeI,iBAQtF,SAASC,EAAMnK,GACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOoK,KAAK,SAAST,UAAW1G,IAChC,kBAAC,IAAD,CAAOmH,KAAK,oBAAoBT,UAAWvE,IAE3C,kBAACsE,EAAD,CAAiBE,qBAAsB5J,EAAM4J,qBAAsBQ,KAAK,QAAQT,UAAWlF,IAC3F,kBAACiF,EAAD,CAAiBE,qBAAsB5J,EAAM4J,qBAAsBQ,KAAK,wBAAwBT,UAAWU,IAC3G,kBAACX,EAAD,CAAiBE,qBAAsB5J,EAAM4J,qBAAsBQ,KAAK,6BAA6BT,UAAWZ,MAMjH,yBACX,kBAAC7G,EAAD,MACM,SAACqB,GAAD,OAAc,kBAAC4G,EAAD,CAAOP,qBAAsBrG,EAAQd,oBC/B9C6H,OAZf,YAA2C,IAArBT,EAAoB,EAApBA,OAAW7J,EAAS,0BACtC,QAAI6J,GAEI,wBAAI9J,UAAU,YACV,uBAAGuE,QAAStE,EAAMsE,QAASvE,UAAU,WAAWmF,KAAMlF,EAAMkF,MAA5D,IAAoElF,EAAMO,MAA1E,OCDhB,SAASgK,GAAOvK,GAEZ,OACI,yBAAKD,UAAU,4DACX,yBAAKA,UAAU,aACX,uBAAGmF,KAAK,SAASnF,UAAU,gBAA3B,sBACA,4BAAQA,UAAU,iBAAiBiE,KAAK,SAASwG,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,qBACtK,0BAAM7K,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BX,GAAG,oBACzC,wBAAIW,UAAU,cACV,kBAAC,GAAD,CAAY8J,OAAQ7J,EAAM4J,qBAAsB1E,KAAK,SAAS3E,MAAM,SACpE,kBAAC,GAAD,CAAYsJ,OAAQ7J,EAAM4J,qBAAsB1E,KAAK,qBAAqB3E,MAAM,eAChF,kBAAC,GAAD,CAAYsJ,OAAQ7J,EAAM4J,qBAAsB1E,KAAK,yBAAyB3E,MAAM,mBACpF,kBAAC,GAAD,CAAYsJ,OAAQ7J,EAAM4J,qBAAsBtF,QAAStE,EAAM6K,SAAU3F,KAAK,UAAU3E,MAAM,aAQvG,yBACX,kBAAC2B,EAAD,MACK,SAACqB,GAAD,OACG,kBAACgH,GAAD,CAAQX,qBAAsBrG,EAAQd,cAAeoI,SAAUtH,EAAQV,qBCIpEiI,I,iNAfX,OACE,oCACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,yBAAK/K,UAAU,aAEb,kBAAC,GAAD,a,GATMI,IAAMC,YCZxB2K,IAASlB,OACP,kBAAC,IAAMmB,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0b756826.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst httpClient = axios.create({\r\n    baseURL: 'https://jrfinancas-api.herokuapp.com', \r\n    //'http://localhost:8080',\r\n    headers:{'x-apikey': '59a7ad19f5a9fa0808f11931',\r\n             'Access-Control-Allow-Origin' : '*',\r\n             'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\r\n    }\r\n});\r\n\r\nclass ApiService{\r\n    constructor(apiurl){\r\n       this.apiurl = apiurl;\r\n    }\r\n\r\n    post(url, objeto){\r\n        const requestUrl = `${this.apiurl}${url}`;\r\n\r\n        return httpClient.post(requestUrl, objeto);\r\n    }\r\n\r\n    put(url, objeto){\r\n        const requestUrl = `${this.apiurl}${url}`;\r\n        return httpClient.put(requestUrl, objeto);\r\n    }\r\n\r\n    delete(url){\r\n        const requestUrl = `${this.apiurl}${url}`;\r\n        return httpClient.delete(requestUrl);\r\n    }\r\n\r\n    get(url){\r\n        const requestUrl = `${this.apiurl}${url}`;\r\n\r\n        console.log('Headers: '+ httpClient.defaults.headers);\r\n        console.log('Post: '+ httpClient.defaults.headers.post);\r\n        console.log('Post: '+ httpClient.defaults);\r\n        console.log('Post: '+ httpClient.headers);\r\n\r\n        return httpClient.get(requestUrl);\r\n    }\r\n}\r\n\r\nexport default ApiService;","function ErroValidacao(mensagens){\r\n    this.mensagens = mensagens;\r\n}\r\n\r\nexport default ErroValidacao;","import ApiService from '../apiService'\r\nimport ErroValidacao from '../exception/erroValidacao'\r\n\r\nclass UsuarioService extends ApiService{\r\n    \r\n    constructor(){\r\n        super('/api/usuarios');\r\n    }\r\n\r\n    autenticar(credenciais){\r\n        return this.post('/autenticar', credenciais);\r\n    }\r\n\r\n    obterSaldoPorUsuario(id){\r\n        return this.get(`/${id}/saldo`);\r\n    }\r\n\r\n    salvar(usuario){\r\n        return this.post('/', usuario);\r\n    }\r\n\r\n    validar(usuario){\r\n        const erros = [];\r\n\r\n        if (!usuario.nome){\r\n            erros.push(\"O campo nome é obrigatório.\");\r\n        }\r\n\r\n        if (!usuario.email){\r\n            erros.push(\"O campo e-mail é obrigatório.\");\r\n        }else if ( !usuario.email.match(/^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+).(\\.[a-z]{2,3})$/) &&\r\n                   !usuario.email.match(/^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)$/)){\r\n            erros.push(\"Informe um e-mail válido.\");\r\n        }\r\n\r\n        if (!usuario.senha || !usuario.senhaRepeticao){\r\n            erros.push(\"Infome a senha duas vezes para validação.\");\r\n        }else if(usuario.senha !== usuario.senhaRepeticao){\r\n            erros.push(\"As senhas não estão iguais.\");\r\n        }\r\n\r\n       if (erros && erros.length > 0){\r\n            throw new ErroValidacao(erros);\r\n       }\r\n    }\r\n}\r\n\r\nexport default UsuarioService;","import React from 'react'\r\n\r\nclass Card extends React.Component{\r\n    \r\n    render(){\r\n\r\n        return(\r\n            <div className=\"card mb-3\">\r\n                <h3 className=\"card-header\">{this.props.title}</h3>\r\n                <div className=\"card-body\"> \r\n                    {this.props.children}\r\n                </div> \r\n            </div>    \r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Card","import React from 'react';\r\n\r\nfunction FormGroup(props){\r\n    return(\r\n        <div className=\"form-group\">\r\n           <label htmlFor={props.htmlFor}>{props.label}</label> \r\n           {props.children}    \r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default FormGroup","import toastr from 'toastr'\r\n\r\ntoastr.options = {\r\n    \"closeButton\": true,\r\n    \"debug\": false,\r\n    \"newestOnTop\": false,\r\n    \"progressBar\": true,\r\n    \"positionClass\": \"toast-top-center\",\r\n    \"preventDuplicates\": false,\r\n    \"onclick\": null,\r\n    \"showDuration\": \"300\",\r\n    \"hideDuration\": \"1000\",\r\n    \"timeOut\": \"5000\",\r\n    \"extendedTimeOut\": \"1000\",\r\n    \"showEasing\": \"swing\",\r\n    \"hideEasing\": \"linear\",\r\n    \"showMethod\": \"fadeIn\",\r\n    \"hideMethod\": \"fadeOut\"\r\n  }\r\n\r\nexport function mostrarMensagem(titulo, mensagem, tipo){\r\n    toastr[tipo](mensagem, titulo)\r\n}\r\n\r\nexport function mensagemErro(mensagem){\r\n    mostrarMensagem('Erro', mensagem, 'error')\r\n}\r\n\r\nexport function mensagemSucesso(mensagem){\r\n    mostrarMensagem('Sucesso', mensagem, 'success')\r\n}\r\n\r\nexport function mensagemAlerta(mensagem){\r\n    mostrarMensagem('Alerta', mensagem, 'warning')\r\n}","export default class LocalStorageService{\r\n\r\n    static adicionarItem(chave, valor){\r\n        localStorage.setItem(chave, JSON.stringify(valor));\r\n    }\r\n\r\n    static obterItem(chave){\r\n        const item = localStorage.getItem(chave);\r\n        return JSON.parse(item); \r\n    }\r\n\r\n    static removerItem(chave){\r\n        localStorage.removeItem(chave);\r\n    }\r\n}","import LocalStorageService from './localStorageService'\r\n\r\nexport const USUARIO_LOGADO = '_usuario_logado';\r\n\r\nexport default class AuthService{\r\n     \r\n    static isUsuarioAutenticado(){\r\n        const usuario = LocalStorageService.obterItem(USUARIO_LOGADO);\r\n        return (usuario && usuario.id);\r\n    }\r\n\r\n    static removerUsuarioAutenticado(){\r\n        LocalStorageService.removerItem(USUARIO_LOGADO);\r\n    }\r\n\r\n    static logar(usuario){\r\n        LocalStorageService.adicionarItem(USUARIO_LOGADO, usuario);\r\n    }\r\n\r\n    static obterUsuarioAutenticado(){\r\n       return LocalStorageService.obterItem(USUARIO_LOGADO); \r\n    }\r\n}","import React from 'react'\r\n\r\nimport AuthService from '../app/service/authService'\r\n\r\nexport const AuthContext = React.createContext()\r\nexport const AuthConsumer = AuthContext.Consumer;\r\nconst AuthProvider = AuthContext.Provider;\r\n\r\nclass ProvedorAutenticacao extends React.Component{\r\n    \r\n    state = {\r\n        usuarioAutenticado: null,\r\n        isAutenticado: false\r\n    }\r\n\r\n    iniciarSessao = (usuario) => {\r\n        AuthService.logar(usuario);\r\n        this.setState( {isAutenticado: true, usuarioAutenticado: usuario} );\r\n    }\r\n\r\n    encerrarSessao = () => {\r\n        AuthService.removerUsuarioAutenticado();\r\n        this.setState({ isAutenticado: false, usuarioAutenticado: null });\r\n    }\r\n\r\n    render(){\r\n        const contexto = {\r\n            usuarioAutenticado: this.state.usuarioAutenticado,\r\n            isAutenticado: this.state.isAutenticado,\r\n            iniciarSessao: this.iniciarSessao,\r\n            encerrarSessao: this.encerrarSessao\r\n        }\r\n\r\n        return(\r\n            <AuthProvider value={contexto} >\r\n                {this.props.children}\r\n            </AuthProvider>    \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProvedorAutenticacao;","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport UsuarioService from '../app/service/usuarioService'\r\n\r\nimport Card from '../components/card'\r\nimport FormGroup from '../components/form-group'\r\nimport {mensagemErro} from '../components/toastr'\r\nimport { AuthContext } from '../main/provedorAutenticacao'\r\n\r\nclass Login extends React.Component {\r\n\r\n    state = {\r\n        email: '',\r\n        senha: ''\r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n        this.service = new UsuarioService();\r\n    }\r\n\r\n    entrar = () => {\r\n        this.service.autenticar({\r\n            email: this.state.email,\r\n            senha: this.state.senha\r\n        }).then (response => {\r\n            this.context.iniciarSessao(response.data);\r\n            this.props.history.push('/home');          \r\n        }).catch(erro => {\r\n            mensagemErro(erro.response.data);\r\n        });\r\n    }\r\n\r\n    prepareCadastrar = () => {\r\n        this.props.history.push('/cadastro-usuario');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\" style={{ position: 'relative', left: '300px' }} >\r\n                    <div className=\"bs-docs-section\">\r\n                        <Card title=\"Login\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"bs-component\">\r\n                                        <fieldset>\r\n                                            <FormGroup label=\"E-mail: *\" htmlFor=\"exampleInputEmail1\">\r\n                                                <input type=\"email\"\r\n                                                    className=\"form-control\"\r\n                                                    id=\"exampleInputEmail1\"\r\n                                                    aria-describedby=\"emailHelp\"\r\n                                                    placeholder=\"Digite o Email\"\r\n                                                    value={this.state.email}\r\n                                                    onChange={(e) => this.setState({ email: e.target.value })} />\r\n                                            </FormGroup>\r\n                                            <FormGroup label=\"E-mail: *\" htmlFor=\"exampleInputPassword1\">\r\n                                                <input type=\"password\"\r\n                                                    className=\"form-control\"\r\n                                                    id=\"exampleInputPassword1\"\r\n                                                    placeholder=\"Password\"\r\n                                                    value={this.state.senha}\r\n                                                    onChange={(e) => this.setState({ senha: e.target.value })} />\r\n                                            </FormGroup>\r\n                                            <button onClick={this.entrar} \r\n                                                    type=\"button\" \r\n                                                    className=\"btn btn-success\">\r\n                                                    <i className= \"pi pi-sign-in\"></i> Entrar</button>\r\n                                            <button onClick={this.prepareCadastrar} \r\n                                                    type=\"button\" \r\n                                                    className=\"btn btn-danger\">\r\n                                                    <i className= \"pi pi-user-plus\"></i> Cadastrar</button>\r\n                                        </fieldset>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.contextType = AuthContext;\r\n\r\nexport default withRouter( Login )","import React from 'react'\r\nimport UsuarioService from '../app/service/usuarioService'\r\nimport formatter from '../../node_modules/currency-formatter'\r\nimport {AuthContext} from '../main/provedorAutenticacao'\r\n\r\nclass Home extends React.Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.usuarioService = new UsuarioService();\r\n    }\r\n\r\n    state={\r\n        saldo: 0.00\r\n    }\r\n\r\n    componentDidMount(){\r\n        const usuarioLogado = this.context.usuarioAutenticado;\r\n\r\n        this.usuarioService.obterSaldoPorUsuario(usuarioLogado.id)\r\n            .then(response => { \r\n                    this.setState({saldo: response.data});\r\n                }\r\n            ).catch(erro => {\r\n                console.error(erro.response); \r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron\">\r\n                <h1 className=\"display-3\">Bem vindo!</h1>\r\n                <p className=\"lead\">Esse é seu sistema de finanças.</p>\r\n                <p className=\"lead\">Seu saldo atual é de {formatter.format(this.state.saldo, {locale: 'pt-BR'}) } </p>\r\n                <hr className=\"my-4\"/>\r\n                    <p>E essa é sua área administrativa, utilize um dos menus ou botões abaixo para navegar pelo sistema.</p>\r\n                    <p className=\"lead\">\r\n                        <a className=\"btn btn-primary btn-lg\" \r\n                           href=\"#/cadastro-usuario\" \r\n                           role=\"button\">\r\n                           <i className=\"pi pi-user-plus\"></i> Cadastrar Usuário</a>\r\n                        <a className=\"btn btn-danger btn-lg\" \r\n                           href=\"#/cadastro-lancamentos\" \r\n                           role=\"button\">\r\n                           <i className=\"pi pi-money-bill\"></i> Cadastrar Lançamento</a>\r\n                    </p>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nHome.contextType = AuthContext;\r\n\r\nexport default Home;","import React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport Card from '../components/card'\r\nimport FormGroup from '../components/form-group'\r\nimport UsuarioService from '../app/service/usuarioService'\r\nimport {mensagemSucesso, mensagemErro, mensagemAlerta} from '../components/toastr'\r\n\r\nclass CadastroUsuario extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.usuarioService = new UsuarioService();\r\n    }\r\n\r\n    state = {\r\n        nome: '',\r\n        email: '',\r\n        senha: '',\r\n        senhaRepeticao: ''\r\n    }\r\n\r\n    validar= () => {\r\n        const {nome, email, senha, senhaRepeticao} = this.state\r\n        const usuario = {nome, email, senha, senhaRepeticao}\r\n\r\n        try{\r\n            this.usuarioService.validar(usuario);\r\n        }catch(error){\r\n            const msgsErro = error.mensagens;\r\n            msgsErro.forEach(msg => mensagemAlerta(msg));\r\n            return false;\r\n        }    \r\n\r\n        this.salvar(usuario);\r\n    }\r\n\r\n    salvar = (usuario) => {\r\n        this.usuarioService.salvar(usuario).\r\n            then( response => {\r\n               mensagemSucesso(\"Usuário cadastrado com sucesso! Faça o login para acessar o sistema\");\r\n               this.props.history.push('/login');     \r\n            }).catch(error => {\r\n               mensagemErro(error.response.data);\r\n            });\r\n    }\r\n\r\n    prepareLogar = () => {\r\n        this.props.history.push('/login');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card title=\"Cadastro de usuário\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div className=\"bs-component\">\r\n                            <fieldset>\r\n                                <FormGroup label=\"Nome: *\" htmlFor=\"inputNome\">\r\n                                    <input type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputNome\"\r\n                                        name=\"nome\"\r\n                                        onChange={(e) => this.setState({ nome: e.target.value })}>\r\n                                    </input>\r\n                                </FormGroup>\r\n                                <FormGroup label=\"E-mail: *\" htmlFor=\"inputEmail\">\r\n                                    <input type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputEmail\"\r\n                                        name=\"email\"\r\n                                        onChange={(e) => this.setState({ email: e.target.value })}>\r\n                                    </input>\r\n                                </FormGroup>\r\n                                <FormGroup label=\"Senha: *\" htmlFor=\"inputSenha\">\r\n                                    <input type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputSenha\"\r\n                                        name=\"senha\"\r\n                                        onChange={(e) => this.setState({ senha: e.target.value })}>\r\n                                    </input>\r\n                                </FormGroup>\r\n                                <FormGroup label=\"Repita a Senha: *\" htmlFor=\"inputRepitaSenha\">\r\n                                    <input type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        id=\"inputRepitaSenha\"\r\n                                        name=\"senha\"\r\n                                        onChange={(e) => this.setState({ senhaRepeticao: e.target.value })}>\r\n                                    </input>\r\n                                </FormGroup>\r\n                                <button onClick={this.validar} \r\n                                        type=\"button\" \r\n                                        className=\"btn btn-success\">\r\n                                        <i className=\"pi pi-save\"> </i> Salvar</button>\r\n                                <button onClick={this.prepareLogar} \r\n                                        type=\"button\" \r\n                                        className=\"btn btn-danger\">\r\n                                        <i className=\"pi pi-times\"> </i> Cancelar</button>\r\n                            </fieldset>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter( CadastroUsuario )","import React from 'react'\r\n\r\nexport default (props) => {\r\n\r\n    const options = props.lista.map( (option, index) => {\r\n        return(\r\n            <option key={index} value={option.value}> {option.label} </option>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <select {...props}>\r\n            {options}\r\n        </select>    \r\n    )\r\n}","import React from 'react'\r\nimport formatter from 'currency-formatter'\r\n\r\nexport default props => {\r\n\r\n    const rows = props.lancamentos.map(lancamentos => {\r\n        return(\r\n            <tr key={lancamentos.id}>\r\n                <td>{lancamentos.descricao}</td>\r\n                <td>{formatter.format(lancamentos.valor, {locale: 'pt-BR'}) }</td>\r\n                <td>{lancamentos.tipo}</td>\r\n                <td>{lancamentos.mes}</td>\r\n                <td>{lancamentos.status}</td>\r\n                <td>\r\n                    <button className=\"btn btn-primary\" \r\n                            title=\"Editar\"\r\n                            type=\"button\"\r\n                            disabled={ lancamentos.status == 'CANCELADO' }\r\n                            onClick={(e) => props.actionEdit(lancamentos.id)}>\r\n                            <i className=\"pi pi-pencil\"></i>\r\n                    </button>\r\n                    <button type=\"button\" title=\"Excluir\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={(e) => props.actionDelete(lancamentos)}>\r\n                            <i className=\"pi pi-trash\"></i>\r\n                    </button>\r\n                    <button type=\"button\" title=\"Efetivar\"\r\n                            className=\"btn btn-warning\"\r\n                            disabled={ lancamentos.status == 'CANCELADO' || lancamentos.status == 'EFETIVADO' }\r\n                            onClick={(e) => props.alterarStatus(lancamentos, 'EFETIVADO')}>\r\n                            <i className=\"pi pi-check\"></i>    \r\n                    </button>\r\n                    <button type=\"button\" title=\"Cancelar\"\r\n                            className=\"btn btn-primary\"\r\n                            disabled={ lancamentos.status == 'CANCELADO' }\r\n                            onClick={(e) => props.alterarStatus(lancamentos, 'CANCELADO')}>\r\n                            <i className=\"pi pi-times\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>    \r\n        )\r\n    });\r\n\r\n    return (\r\n        <table className=\"table table-hover\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Descrição</th>\r\n                    <th scope=\"col\">Valor</th>\r\n                    <th scope=\"col\">Tipo</th>\r\n                    <th scope=\"col\">Mês</th>\r\n                    <th scope=\"col\">Situação</th>\r\n                    <th scope=\"col\">Ações</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import ApiService from '../apiService'\r\n\r\nimport ErroValidacao from '../exception/erroValidacao'\r\nimport { mensagemErro } from '../../components/toastr';\r\n\r\nexport default class LancamentoService extends ApiService{\r\n\r\n    constructor(){\r\n        super('/api/lancamentos');\r\n    }\r\n\r\n    obterListaMeses(){\r\n        return [\r\n            { label: 'Selecione...', value: '' },\r\n            { label: 'Janeiro', value: 1 },\r\n            { label: 'Fevereiro', value: 2 },\r\n            { label: 'Março', value: 3 },\r\n            { label: 'Abril', value: 4 },\r\n            { label: 'Maio', value: 5 },\r\n            { label: 'Junho', value: 6 },\r\n            { label: 'Julho', value: 7 },\r\n            { label: 'Agosto', value: 8 },\r\n            { label: 'Setembro', value: 9 },\r\n            { label: 'Outubro', value: 10 },\r\n            { label: 'Novembro', value: 11 },\r\n            { label: 'Dezembro', value: 12 },\r\n        ]\r\n    }\r\n\r\n    obterListaTipo(){\r\n        return [\r\n            { label: 'Selecione...', value: '' },\r\n            { label: 'Despesa', value: 'DESPESA' },\r\n            { label: 'Receita', value: 'RECEITA' }\r\n        ]\r\n    }    \r\n\r\n    consultar(lancamentoFiltros){\r\n        let params = `?ano=${lancamentoFiltros.ano}`;\r\n\r\n        if (lancamentoFiltros.mes){\r\n            params = `${params}&mes=${lancamentoFiltros.mes}`\r\n        }\r\n        if (lancamentoFiltros.tipo){\r\n            params = `${params}&tipo=${lancamentoFiltros.tipo}`\r\n        }\r\n        if (lancamentoFiltros.status){\r\n            params = `${params}&status=${lancamentoFiltros.status}`\r\n        }\r\n        if (lancamentoFiltros.usuario){\r\n            params = `${params}&usuario=${lancamentoFiltros.usuario}`\r\n        }\r\n        if (lancamentoFiltros.descricao){\r\n            params = `${params}&descricao=${lancamentoFiltros.descricao}`\r\n        }\r\n\r\n        return this.get(params);\r\n    }\r\n\r\n    validar(lancamento){\r\n        const erros = [];\r\n        \r\n        if (!lancamento.descricao){\r\n            erros.push('O preenchimento do campo [Descrição] é obrigatório.');\r\n        }\r\n        if (!lancamento.ano){\r\n            erros.push('O preenchimento do campo [Ano] é obrigatório.');\r\n        }\r\n        if (!lancamento.mes){\r\n            erros.push('O preenchimento do campo [Mês] é obrigatório.');\r\n        }\r\n        if (!lancamento.valor || lancamento.valor <= 0){\r\n            erros.push('O preenchimento do campo [Valor] é obrigatório.');\r\n        }\r\n        if (!lancamento.tipo){\r\n            erros.push('O preenchimento do campo [Tipo] é obrigatório.');\r\n        }\r\n\r\n        if (erros && erros.length > 0){\r\n            throw new ErroValidacao(erros);\r\n        }\r\n    }\r\n\r\n    deletar(id){\r\n        return this.delete(`/${id}`);\r\n    }\r\n\r\n    salvar(lancamento){\r\n        return this.post('/', lancamento);\r\n    }\r\n    \r\n    atualizar(lancamento){\r\n        return this.put(`/${lancamento.id}`, lancamento);\r\n    }\r\n\r\n    alterarStatus(id, status){\r\n        /*POSSO FAZER DESSE JEITO, DECLARANDO UMA VARIÁVEL\r\n        const statusDTO = { status: status};\r\n        OU fazendo da forma' que está sendo feito tipificada, pq o nome do parâmetro e o campo são iguais\r\n        {status}\r\n          */\r\n        return this.put(`/${id}/atualiza-status`, {status});\r\n    }\r\n\r\n    obterPorId(id){\r\n        return this.get(`/${id}`);\r\n    }\r\n}","import React from 'react'\r\nimport { withRouter, Route } from 'react-router-dom'\r\n\r\nimport Card from '../../components/card'\r\nimport FormGroup from '../../components/form-group'\r\nimport SelectMenu from '../../components/selectMenu'\r\nimport LancamentoTable from './lancamentosTable'\r\nimport LancamentoService from '../../app/service/lancamentoService'\r\nimport LocalStorageService from '../../app/service/localStorageService'\r\nimport { mensagemSucesso, mensagemErro, mensagemAlerta } from '../../components/toastr'\r\nimport {Dialog} from 'primereact/dialog'\r\nimport {Button} from 'primereact/button'\r\nimport lancamentosTable from './lancamentosTable'\r\n\r\nclass ConsultaLancamentos extends React.Component {\r\n\r\n    state = {\r\n        ano: '',\r\n        mes: '',\r\n        tipo: '',\r\n        descricao: '',\r\n        showConfirmDialogDel: false,\r\n        lancamentoDeletar: {},\r\n        showConfirmAlteracaoStatus: false,\r\n        lancamentoMudancaoStatus: {}, \r\n        statusAlterado: '',\r\n        lancamentos: []\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.lancamentoService = new LancamentoService();\r\n    }\r\n\r\n    consultar = () => {\r\n        if (!this.state.ano) {\r\n            mensagemErro('O preenchimento do campo Ano é obrigatório.');\r\n            return false;\r\n        }\r\n\r\n        const usuarioLogado = LocalStorageService.obterItem('_usuario_logado');\r\n\r\n        const lancamentoFiltro = {\r\n            ano: this.state.ano,\r\n            mes: this.state.mes,\r\n            tipo: this.state.tipo,\r\n            status: '',\r\n            descricao: this.state.descricao,\r\n            usuario: usuarioLogado.id\r\n        }\r\n\r\n        this.lancamentoService.consultar(lancamentoFiltro)\r\n            .then(resposta => {\r\n                const lista = resposta.data;\r\n                \r\n                if(lista.length < 1){\r\n                    mensagemAlerta(\"Nenhum resultado encontrado.\");\r\n                } \r\n                \r\n                this.setState({ lancamentos: lista })\r\n            }).catch(error => {\r\n                mensagemErro(error.resposta.data);\r\n            });\r\n    }\r\n\r\n    editar = (id) => {\r\n        this.props.history.push(`cadastro-lancamentos/${id}`);\r\n    }\r\n\r\n    abrirConfirmacaoDeletar = (lancamento) => {\r\n        this.setState({showConfirmDialogDel: true, lancamentoDeletar: lancamento});\r\n    }\r\n\r\n    cancelarDelecao = () => {\r\n        this.setState({showConfirmDialogDel: false, lancamentoDeletar: {}});\r\n    }\r\n\r\n    deletar = () => {\r\n        this.lancamentoService.deletar(this.state.lancamentoDeletar.id)\r\n            .then(response => {\r\n                const index = this.state.lancamentos.indexOf(this.state.lancamentoDeletar);\r\n                this.state.lancamentos.splice(index, 1);\r\n                this.setState({lancamentos: this.state.lancamentos, showConfirmDialogDel: false});\r\n\r\n                mensagemSucesso('Lançamento excluído com sucesso!');\r\n            }).catch(erro => {\r\n                mensagemErro('Ocorreu um erro ao excluir o lançamento. ');\r\n            });\r\n    }\r\n\r\n    prepareCadastrar = () => {\r\n        this.props.history.push('cadastro-lancamentos'); \r\n    }\r\n\r\n    abrirConfirmacaoAlterarStatus = (lancamento, status) => {\r\n        console.log('status: '+ status);\r\n        console.log('Lancto: '+ lancamento);\r\n        \r\n        this.setState({showConfirmAlteracaoStatus: true, lancamentoMudancaoStatus: lancamento, statusAlterado: status});\r\n    }\r\n\r\n    cancelarAlteracaoStatus = () => {\r\n        this.setState({showConfirmAlteracaoStatus: false, lancamentoMudancaoStatus: {}, statusAlterado: ''}); \r\n    }\r\n\r\n    alterarStatus = () => {\r\n        const statusAlterado = this.state.statusAlterado;\r\n\r\n        this.lancamentoService.alterarStatus(this.state.lancamentoMudancaoStatus.id, statusAlterado)\r\n            .then( response => {\r\n                const lanctos = this.state.lancamentos; \r\n                const index = lanctos.indexOf(this.state.lancamentoMudancaoStatus); \r\n\r\n                if (index != -1){\r\n                    this.state.lancamentoMudancaoStatus.status = statusAlterado;\r\n                    lanctos.status = statusAlterado;\r\n                    this.setState({lancamentos: lanctos, showConfirmAlteracaoStatus: false, statusAlterado: ''});\r\n                }\r\n\r\n                mensagemSucesso('Status atualizado com sucesso');\r\n            }).catch(error => {\r\n                mensagemErro(error.response.data);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const meses = this.lancamentoService.obterListaMeses();\r\n\r\n        const tipos = this.lancamentoService.obterListaTipo();\r\n\r\n        const confirmaDialogFooter = (\r\n            <div>\r\n                <Button label=\"Confirmar\" icon=\"pi pi-check\" onClick={this.deletar} />\r\n                <Button label=\"Cancelar\" icon=\"pi pi-times\" onClick={this.cancelarDelecao} />\r\n            </div>\r\n        );\r\n\r\n        const confirmaDialogFooterAlterarStatus = (\r\n            <div>\r\n                <Button label=\"Confirmar\" icon=\"pi pi-check\" onClick={this.alterarStatus} />\r\n                <Button label=\"Cancelar\" icon=\"pi pi-times\" onClick={this.cancelarAlteracaoStatus} />\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <Card title=\"Consulta de lançamentos\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"bs-component\">\r\n                            <FormGroup label=\"Ano: *\" htmlFor=\"inputAno\">\r\n                                <input type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"inputAno\"\r\n                                    value={this.state.ano}\r\n                                    onChange={(e) => this.setState({ ano: e.target.value })}\r\n                                    placeholder=\"Digite o ano\" />\r\n                            </FormGroup>\r\n                            <FormGroup htmlFor=\"inputMes\" label=\"Mês: *\">\r\n                                <SelectMenu className=\"form-control\"\r\n                                    id=\"idSelectMes\"\r\n                                    value={this.state.mes}\r\n                                    onChange={(e) => this.setState({ mes: e.target.value })}\r\n                                    lista={meses} />\r\n                            </FormGroup>\r\n                            <FormGroup htmlFor=\"inputTipo\" label=\"Tipo de lançamento: \">\r\n                                <SelectMenu className=\"form-control\"\r\n                                    id=\"idSelectTipo\"\r\n                                    value={this.state.tipo}\r\n                                    onChange={e => this.setState({ tipo: e.target.value })}\r\n                                    lista={tipos} />\r\n                            </FormGroup>\r\n                            <FormGroup label=\"Descrição: *\" htmlFor=\"inputDesc\">\r\n                                <input type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"inputDesc\"\r\n                                    value={this.state.descricao}\r\n                                    onChange={(e) => this.setState({ descricao: e.target.value })}\r\n                                    placeholder=\"Digite a descrição\" />\r\n                            </FormGroup>\r\n\r\n                            <button onClick={this.consultar} \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-success\">\r\n                                    <i className= \"pi pi-search\"></i> Buscar</button>\r\n                            <button onClick={this.prepareCadastrar} \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-danger\">\r\n                                    <i className= \"pi pi-plus\"></i> Cadastrar</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div className=\"bs-component\">\r\n                            <LancamentoTable lancamentos={this.state.lancamentos}\r\n                                actionEdit={this.editar}\r\n                                actionDelete={this.abrirConfirmacaoDeletar}\r\n                                alterarStatus={this.abrirConfirmacaoAlterarStatus} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <Dialog header=\"Confirmação\" \r\n                            visible={this.state.showConfirmDialogDel} \r\n                            style={{ width: '50vw' }} \r\n                            footer={confirmaDialogFooter}\r\n                            modal={true} \r\n                            onHide={() => this.setState({ showConfirmDialogDel: false })}>\r\n                        Confirma a exclusão do lançamento?\r\n                    </Dialog>\r\n                    <Dialog header=\"Confirmação\" \r\n                            visible={this.state.showConfirmAlteracaoStatus} \r\n                            style={{ width: '50vw' }} \r\n                            footer={confirmaDialogFooterAlterarStatus}\r\n                            modal={true} \r\n                            onHide={() => this.setState({ showConfirmAlteracaoStatus: false })}>\r\n                        Confirma a mudança do status do lançamento para \"{this.state.statusAlterado}\"?\r\n                    </Dialog>\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ConsultaLancamentos)","import React from 'react'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\nimport formatter from 'currency-formatter'\r\n\r\nimport Card from '../../components/card'\r\nimport FormGroup from '../../components/form-group'\r\nimport SelectMenu from '../../components/selectMenu'\r\nimport LancamentoService from '../../app/service/lancamentoService'\r\nimport {mensagemSucesso, mensagemErro, mensagemAlerta} from '../../components/toastr'\r\nimport LocalStorage from '../../app/service/localStorageService'\r\n\r\nclass CadastroLancamento extends React.Component{\r\n\r\n    state = {\r\n        id: null,\r\n        descricao: '',\r\n        ano: '',\r\n        mes: '',\r\n        valor: '',\r\n        tipo: '',\r\n        usuario: null,\r\n        status: '',\r\n        atualizando: false\r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n        this.lancamentoService = new LancamentoService();\r\n    }\r\n\r\n    componentDidMount(){\r\n        const params = this.props.match.params;\r\n        if (params.id){\r\n            this.lancamentoService.obterPorId(params.id)\r\n                .then( response => {\r\n                    this.setState( {...response.data, atualizando: true} );\r\n                }).catch(error => {\r\n                    mensagemErro(error.response.data);\r\n                });\r\n        }\r\n\r\n        console.log(params);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const value = event.target.value;\r\n        const name  = event.target.name;\r\n\r\n        this.setState({ [name] : value });        \r\n    }\r\n\r\n    validar = () => {\r\n        const lancamento = this.prepareDadosPersistencia();\r\n\r\n        try{\r\n            this.lancamentoService.validar(lancamento);\r\n        }catch(erro){\r\n            const msgs = erro.mensagens;\r\n            msgs.forEach(msg => mensagemAlerta(msg));\r\n\r\n            console.log('Erro validação'+ erro.mensagens);\r\n            return false;\r\n        }\r\n\r\n        if (this.state.id){\r\n            return this.atualizar(lancamento);\r\n        }else{\r\n            return this.salvar(lancamento);\r\n        }\r\n    }\r\n\r\n    prepareDadosPersistencia = () => {\r\n        if (this.EhNovoLancamento()){\r\n            const usuario = LocalStorage.obterItem('_usuario_logado');\r\n            this.setState({usuario: usuario.id});\r\n\r\n            const { descricao, valor, mes, ano, tipo } = this.state;\r\n            const lancamento = { descricao, valor, mes, ano, tipo, usuario: usuario.id };\r\n            \r\n            return lancamento;\r\n        }else{\r\n            const { descricao, valor, mes, ano, tipo, id, usuario, status } = this.state;\r\n            const lancamento = { descricao, valor, mes, ano, tipo, id, usuario, status };\r\n\r\n            return lancamento;\r\n        }\r\n    }\r\n\r\n    EhNovoLancamento = () =>{\r\n        if (this.state.id){\r\n            return false;\r\n        }    \r\n\r\n        return true;        \r\n    }\r\n\r\n    salvar = (lancamento) => {\r\n        return this.lancamentoService.salvar(lancamento)\r\n            .then( response => {\r\n                mensagemSucesso('Lançamento realizado com sucesso');\r\n                this.props.history.push('/consulta-lancamentos');\r\n            }).catch( error => {\r\n                mensagemErro(error.response.data);\r\n            });\r\n    }\r\n\r\n    atualizar = (lancamento) => {\r\n        return this.lancamentoService.atualizar(lancamento)\r\n            .then( response => {\r\n                this.props.history.push('/consulta-lancamentos');\r\n                mensagemSucesso('Lançamento atualizado com sucesso');\r\n            }).catch( error => {\r\n                mensagemErro(error.response.data);\r\n            });\r\n    }\r\n\r\n    preparaConsultar = () => {\r\n        this.props.history.push('/consulta-lancamentos');\r\n    }\r\n\r\n    render() {\r\n        const meses = this.lancamentoService.obterListaMeses();\r\n        const tipos = this.lancamentoService.obterListaTipo();\r\n\r\n        return (\r\n            <Card title={this.state.atualizando ? 'Atualizando lançamento' : 'Cadastro de lançamentos'} >\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <FormGroup id=\"inputDescricao\" label=\"Descrição: *\"> \r\n                            <input id=\"inputDescricao\" \r\n                                   type=\"text\" \r\n                                   className=\"form-control\"\r\n                                   name=\"descricao\"\r\n                                   value={this.state.descricao}\r\n                                   onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                        <FormGroup id=\"inputAno\" label=\"Ano: *\"> \r\n                            <input id=\"inputAno\" \r\n                                   type=\"text\" \r\n                                   className=\"form-control\"\r\n                                   name=\"ano\"\r\n                                   value={this.state.ano}\r\n                                   onChange={this.handleChange} />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"col-lg-6\">\r\n                        <FormGroup htmlFor=\"inputMes\" label=\"Mês: *\">\r\n                                <SelectMenu className=\"form-control\"\r\n                                    id=\"idSelectMes\"\r\n                                    name=\"mes\"\r\n                                    value={this.state.mes}\r\n                                    onChange={this.handleChange}\r\n                                    lista={meses} />\r\n                        </FormGroup>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                        <FormGroup id=\"inputValor\" label=\"Valor: *\">\r\n                            <input id=\"inputValor\" \r\n                                   type=\"number\"\r\n                                   pattern=\"[0-9]+R$\"\r\n                                   className=\"form-control text-left\"\r\n                                   name=\"valor\"\r\n                                   value={this.state.valor}\r\n                                   onChange={this.handleChange}/>        \r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                        <FormGroup id=\"inputTipo\" label=\"Tipo: *\">\r\n                            <SelectMenu className=\"form-control\" \r\n                                        id=\"inputTipo\"\r\n                                        name=\"tipo\"\r\n                                        value={this.state.tipo}\r\n                                        onChange={this.handleChange}\r\n                                        lista={tipos} />\r\n                        </FormGroup>\r\n                    </div> \r\n                    <div className=\"col-lg-4\">\r\n                        <FormGroup id=\"inputStatus\" label=\"Status: *\">\r\n                            <input id=\"inputStatus\" \r\n                                   type=\"text\" \r\n                                   name=\"status\"\r\n                                   value={this.state.status}\r\n                                   className=\"form-control\" disabled/>\r\n                        </FormGroup>\r\n                    </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                        <button onClick={this.validar} \r\n                                className=\"btn btn-success\">\r\n                                <i className={this.state.atualizando ? \"pi pi-refresh\": \"pi pi-save\"}></i>\r\n                                {this.state.atualizando ? ' Atualizar' : ' Salvar'}\r\n                        </button>\r\n                        <button onClick={this.preparaConsultar} \r\n                                className=\"btn btn-danger\">\r\n                                <i className= \"pi pi-arrow-left\"></i> Voltar</button>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(CadastroLancamento)","import React from 'react'\r\n\r\nimport Login from '../views/login'\r\nimport Home  from '../views/home'\r\nimport CadastroUsuario from '../views/cadastroUsuario'\r\nimport ConsultaLancamento from '../views/lancamentos/consultaLancamentos'\r\nimport CadastroLancamento from '../views/lancamentos/cadastroLancamento'\r\nimport { AuthConsumer } from '../main/provedorAutenticacao'\r\n\r\nimport {Route, Switch, HashRouter, Redirect} from 'react-router-dom'\r\n\r\nfunction RotaAutenticada( { component: Component, isUsuarioAutenticado, ...props} ){\r\n    return(\r\n        <Route {...props} render={ (componentProps) => {\r\n            if (isUsuarioAutenticado){\r\n                return(\r\n                    <Component {...componentProps} />\r\n                )\r\n            }else{\r\n                return(\r\n                    <Redirect to={ {pathname: '/login', state: { from: componentProps.location }  } } />\r\n                )    \r\n            }\r\n        }}\r\n        />\r\n    )\r\n}\r\n\r\nfunction Rotas(props) {\r\n    return(\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route path=\"/login\" component={Login} />\r\n                <Route path=\"/cadastro-usuario\" component={CadastroUsuario} />\r\n\r\n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/home\" component={Home} />\r\n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/consulta-lancamentos\" component={ConsultaLancamento} />\r\n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/cadastro-lancamentos/:id?\" component={CadastroLancamento} />\r\n            </Switch>        \r\n        </HashRouter>    \r\n    )\r\n}\r\n\r\nexport default () => (\r\n    <AuthConsumer>\r\n        { (context) => (<Rotas isUsuarioAutenticado={context.isAutenticado} />) }\r\n    </AuthConsumer>    \r\n)","import React from 'react'\r\n\r\nfunction NavbarItem( {render, ...props} ) {\r\n    if (render){\r\n        return (\r\n            <li className=\"nav-item\">\r\n                <a onClick={props.onClick} className=\"nav-link\" href={props.href}> {props.label} </a>\r\n            </li>\r\n        )\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default NavbarItem","import React from 'react'\r\n\r\nimport NavbarItem from './navbarItem'\r\nimport { AuthConsumer } from '../main/provedorAutenticacao'\r\n\r\nfunction NavBar(props) {\r\n\r\n    return (\r\n        <div className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-primary\">\r\n            <div className=\"container\">\r\n                <a href=\"#/home\" className=\"navbar-brand\">Minhas Finanças</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <NavbarItem render={props.isUsuarioAutenticado} href=\"#/home\" label=\"Home\"/>\r\n                        <NavbarItem render={props.isUsuarioAutenticado} href=\"#/cadastro-usuario\" label=\"Usuário\"/> \r\n                        <NavbarItem render={props.isUsuarioAutenticado} href=\"#/consulta-lancamentos\" label=\"Lançamentos\"/> \r\n                        <NavbarItem render={props.isUsuarioAutenticado} onClick={props.deslogar} href=\"#/login\" label=\"Sair\"/>                \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default () => (\r\n    <AuthConsumer>\r\n        {(context) => (\r\n            <NavBar isUsuarioAutenticado={context.isAutenticado} deslogar={context.encerrarSessao} />\r\n        )}\r\n    </AuthConsumer>\r\n)\r\n\r\n","import React from 'react';\n\nimport Rotas from './rotas';\nimport Navbar from '../components/navbar'\nimport ProvedorAutenticacao from './provedorAutenticacao'\n\nimport 'toastr/build/toastr.min.js'\n\nimport 'bootswatch/dist/flatly/bootstrap.css';\nimport '../custom.css';\nimport 'toastr/build/toastr.css'\n\nimport 'primereact/resources/themes/nova-light/theme.css'\nimport 'primereact/resources/primereact.min.css'\nimport 'primeicons/primeicons.css'\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <>\n        <ProvedorAutenticacao>\n          <Navbar />\n          <div className=\"container\">\n\n            <Rotas />\n\n          </div>\n        </ProvedorAutenticacao>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './main/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}